# 0909
### Ciclo de instrução
- CPU tem um registrador especial chamado contador de programa (CP), que indica onde está a próxima instrução na memória
- Cada estágio é feito em etapas e tem o controle para que tudo seja executado com sucesso

- **CPU para executar uma instrução:**
	- Solicita a leitura da memória enviando o endereço da instrução (CP)
	- A memória envia o dado (instrução) para o CPU
	- O CPU decodifica o dado como instrução
	- O CPU executa a instrução
- **Cálculo de endereço de instrução (pela Unidade de Controle)**: Calcula o endereço da próxima instrução a ser
executada
- **Busca de instrução**: ler uma instrução da memória e armazena no registrador
- **Decodificação da operação da instrução**: decodifica e analisa o código da instrução para determinar qual é a operação a ser realizada e os operandos a serem utilizados
- **Cálculo de endereço de operando**:  se a operação envolver a referência a um operando na memória ou estiver disponível via E/S, o endereço do operando será determinado 
- **Busca do operando**: O operando é localizado na memória ou é lido no dispositivo de E/S
- **Operação sobre os dados**: a operação indicada na instrução é executada
- **Armazenamento de resultado**: resultado é escrito na memória ou no dispositivo de E/S

Na memória do registrador temos o dado processado, e precisa enviar para o armazenamento em disco, então faz o caminho inverso: registrador -> memória RAM -> caminhar até o disco. Ciclo da instrução vai concluir somente com o armazenamento do dado no dispositivo de disco.

![[notes/SDI/Media/Pasted image 20240909084035.png|650]]
##### Compilador
 software que traduz um programa escrito em uma linguagem de programação de alto nível (código fonte) para uma linguagem de montagem (assembly), cada instrução da linguagem é substituída por um conjunto de instruções equivalentes da linguagem de montagem. Traduzido uma vez, executado várias.
##### INTERPRETADOR
- traduz instrução por instrução de um programa escrito em linguagem de programação em linguagem de máquina, imediatamente executa a instrução. instrução da linguagem de programação é substituída por um conjunto de instruções equivalentes da linguagem de máquina.
- Quando está tendo contato direto com o hardware (BIOS, OS), precisa de um interpretador
- instrução da linguagem de programação transformada para linguagem de máquina carregada na memória e executada não é criado um programa em linguagem de máquina, programa deve ser novamente interpretado para ser executado

##### Características de Instruções de Máquina
- A operação de uma CPU é determinada pelas instruções que ela executa, conhecidas como:
	- instruções de máquina
	- instruções do computador.
- coleção de diferentes instruções que a CPU é capaz de executar: conhecida como conjunto de instruções da CPU

##### Elementos de instrução de máquina:
- Cada instrução deve conter toda a informação necessária para que a CPU possa executá-la
- Elementos de instrução de máquina:
	- **Código de operação:** especifica a operação a ser efetuada
	- **Referência a operando fonte:** operandos que constituem dados de entrada para a operação
	- **Referência a operando de destino**
	- **Endereço da próxima instrução:** endereço onde a CPU deverá buscar a próxima instrução

Na maioria dos casos a próxima instrução é a que segue imediatamente instrução corrente. Quando necessário, a instrução deve fornecer um endereço de memória principal ou virtual
![[Pasted image 20240920085901.png|700]]

Os operandos fonte e destino podem estar localizados em uma das seguintes áreas:
- **Memória principal ou virtual;**
- **Registrador da CPU**, geralmente a CPU tem um ou mais registradores que podem ser referenciados pelas instruções de máquina;
- **Dispositivo de E/S**, a instrução deve especificar um módulo de E/S e um dispositivo para operação

### Representação de instruções 
![[Pasted image 20240920090106.png|700]]
- Instruções são dividadas em campos, e durante a execução é lida em um registrador de instruções (IR)
- Códigos de operação são representados por mnemônicos:
	- ADD Adição
	- SUB Subtração
	- MPY Multiplicação
	- DIV Divisão
	- LOAD Carregar dados da memória
	- STOR Armazenar dados na memória

### Tipos de instrução

**Linguagem de alto nível**:
- operações são expressas de uma maneira algébrica concisa  usando variáveis
**Linguagem de máquina**:
- operações são expressas de maneira mais básica  envolvendo a movimentação de dados de e para registradores

- um computador deve ter um conjunto de instruções  que permita ao usuário formular qualquer tarefa de processamento de dados.
- qualquer programa em uma linguagem de alto nível  deve ser traduzido para uma linguagem de máquina para que possa ser executado
- conjunto de instruções de máquina deve ser suficiente para expressar qualquer comando de uma linguagem de alto nível

- Processamento de dados, instruções aritméticas e lógicas
- Armazenamento de dados, instruções de memória
- Movimentação de dados, instruções de E/S
- Controle, instruções de teste e desvio

- Instruções aritméticas: fornecem a capacidade computacional para processamento de dados numéricos
- Instruções lógicas (booleanas): operam sobre bits de uma palavra, como bits e não como números
- Instruções de memória: move dados entre a memória e os registradores

![[Pasted image 20240920090603.png]]
___
### 1
O ciclo de instrução é a sequência básica de passos que um processador segue para executar uma única instrução de um programa. Imagine-o como uma receita que a CPU segue para realizar uma tarefa específica.

As etapas principais são:
 - Busca: A instrução é buscada na memória.
 - Decodificação: A instrução é "entendida" pelo processador.
 - Execução: A instrução é realizada.
 - Escrita: O resultado é armazenado.

Para otimizar o desempenho, são utilizadas técnicas como:
 - Pipeline: Processamento paralelo de múltiplas instruções.
 - Superescalar: Execução de múltiplas instruções em paralelo em uma única etapa.
 - Predição de Ramos: Antecipação do próximo caminho a ser seguido em um programa.
 - Memória Cache: Armazenamento temporário de dados frequentemente usados.
 - RISC: Conjunto de instruções mais simples e regular.
 - Multiprocessamento: Utilização de múltiplos núcleos ou processadores.

Fatores que influenciam o desempenho:
 - Frequência do Clock: Velocidade do processador.
 -  CPI: Número médio de ciclos por instrução.
 - Latência da Memória: Tempo para acessar a memória principal.
### 2
Um compilador é um software que realiza a tradução de um código escrito em linguagem de alto nível para uma linguagem de montagem (assembly), enquanto o montador realiza a tradução da linguagem de montagem para linguagem de máquina (baixo nível). Alguns compiladores conseguem traduzir a linguagem de alto nível diretamente para o linguagem de máquina.
### 3
As instruções de máquina possuem as seguines características:
- Código de operação: especifica a operação a ser efetuada, como adição, subtração e etc
- Referência a operando fonte: operandos que constituem dados de entrada para a
operação
- Referência a operando de destino
- Endereço da próxima instrução: endereço onde a CPU deverá buscar a próxima
instrução

Os operandos fonte e destino podem estar localizados:
- Memória principal ou virtual
- Registradores da CPU
- Dispositivos de E/S

E são acessados de acordo com o ciclo de instruções
### 4
Em uma linguagem de alto nível as operações são expressas de uma maneira algébrica
concisa usando variáveis, e deve ser traduzido para instruções de baixo nível para poder ser executado.

Em uma linguagem de máquina as operações são expressas de maneira mais básica envolvendo a movimentação de dados para registradores

Os tipos de instrução são:
- Instruções aritméticas: fornecem a capacidade computacional para
processamento de dados numéricos
- Instruções lógicas (booleanas): operam sobre bits de uma palavra, como bits e
não como números
- Instruções de memória: move dados entre a memória e os registradores
- Instruções de de entrada e saída
- Instruções de teste e desvio 
___
